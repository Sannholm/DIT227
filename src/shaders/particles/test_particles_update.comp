#version 430

{% include "particles/common/update_common.glsl" %}

void updateParticle(vec3 p0, vec3 v0, float radius) {
    // Apply impulses // TODO: Before or after?
    vec3 v1 = v0 + vec3(0.0, -9.82, 0.0) * deltaTime; // TODO: Euler integration?
    vec3 p1 = p0 + v1 * deltaTime; // TODO: Euler integration?

    CollisionQuery query = checkCollision(p1, radius);
    if (query.colliding) {
        // Collision response
        p1 = p0; // TODO: More accurately find intersection point
        const float RESTITUTION = 0.9;
        v1 = reflect(v1, query.collision.normal) * RESTITUTION;
    }
    
    emitParticle(p1, v1, radius);
}